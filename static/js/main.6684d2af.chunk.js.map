{"version":3,"sources":["components/Button/Button.js","components/Welcome/Welcome.js","data/index.js","components/Game/Game.js","components/Score/Score.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","type","onClick","text","Welcome","useState","nickname","setNickname","isValid","setIsValid","showGame","onButtonClick","step","id","placeholder","value","onChange","e","target","aria-label","aria-required","required","event","preventDefault","match","data","Game","points","setPoints","words","setWords","goodWords","setGoodWords","question","setQuestion","isGameFinished","setIsGameFinished","selectedWords","useEffect","index","Math","floor","random","length","preparedWords","all_words","map","word","good_words","options","rotations","rotationAngles","colors","deterministic","enableTooltip","padding","fontWeight","fontFamily","fontSizes","callbacks","onWordClick","element","classList","contains","filteredItems","filter","item","push","toggle","getWordColor","rightUnselected","correctAnswers","rightSelected","wrongSelected","forEach","includes","updatedWords","some","w","document","querySelectorAll","remove","Score","App","setStep","getDataFromChild","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wWAaeA,EAXA,SAACC,GACd,OACE,wBACEC,UAAU,WACVC,KAAK,SACLC,QAASH,EAAMG,QAHjB,SAIGH,EAAMI,QCmDEC,EAvDC,SAACL,GAAW,IAAD,EACOM,mBAAS,IADhB,mBAClBC,EADkB,KACRC,EADQ,OAEKF,oBAAS,GAFd,mBAElBG,EAFkB,KAETC,EAFS,KAiBnBC,EAAW,WACfX,EAAMY,cAAc,CAClBL,SAAUA,EACVM,KAAM,UAIV,OACE,sBAAKZ,UAAU,YAAf,UACE,gDACA,uBAAMA,UAAU,kBAAhB,UACIQ,EAOA,GANA,sBACEK,GAAG,QACHb,UAAU,mBAFZ,qIAQF,+CACEA,UAAU,mBACVC,KAAK,OACLa,YAAY,8BACZC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAYU,EAAEC,OAAOH,SAChCP,EAA4C,GAAlC,CAAE,mBAAoB,UANxC,IAOEW,aAAW,WACXC,gBAAc,OACdC,UAAQ,KACV,cAAC,EAAD,CACElB,KAAK,OACLD,QA7CiB,SAACoB,GAGxBA,EAAMC,kBAEN,OAAIjB,QAAJ,IAAIA,OAAJ,EAAIA,EAAUkB,MAJA,yBAKZf,GAAW,GACXC,KAEAD,GAAW,a,QCkDFgB,EAnEF,CACX,CACE,SAAY,iBACZ,UAAa,CACX,OACA,OACA,OACA,QACA,UACA,SACA,MACA,MACA,QACA,MACA,YACA,OAEF,WAAc,CACZ,QACA,QAGJ,CACE,SAAY,gBACZ,UAAa,CACX,QACA,YACA,MACA,MACA,OACA,SACA,QACA,WACA,YACA,QACA,QACA,SAEF,WAAc,CACZ,MACA,OACA,SACA,QACA,UAGJ,CACE,SAAY,kBACZ,UAAa,CACX,SACA,OACA,MACA,MACA,OACA,QACA,MACA,QACA,SAEF,WAAc,CACZ,MACA,MACA,W,gBCyESC,EAjIF,SAAC3B,GAAW,IAAD,EACMM,mBAAS,GADf,mBACfsB,EADe,KACPC,EADO,OAEAvB,mBAAS,IAFT,mBAEnBwB,EAFmB,KAEZC,EAFY,OAGQzB,mBAAS,IAHjB,mBAGnB0B,EAHmB,KAGRC,EAHQ,OAIM3B,mBAAS,IAJf,mBAInB4B,EAJmB,KAITC,EAJS,OAKkB7B,oBAAS,GAL3B,mBAKnB8B,EALmB,KAKHC,EALG,KAOlBC,EAAgB,GAEpBC,qBAAU,WACR,IAAIC,EAAQC,KAAKC,MAAMD,KAAKE,SAAWjB,EAAKkB,QAGxCC,EAFMnB,EAAKc,GAAOM,UAEIC,KAAI,SAAAC,GAAU,MAAO,CAAE5C,KAAM4C,EAAMhC,MAAO,MAEpEe,EAASc,GACTV,EAAYT,EAAKc,GAAON,UACxBD,EAAaP,EAAKc,GAAOS,cACxB,IAEH,IA2DMC,EAAU,CACdC,UAAW,EACXC,eAAgB,CAAC,GACjBC,OAAQ,CAAC,QACTC,eAAe,EACfC,eAAe,EACfC,QAAS,GACTC,WAAY,OACZC,WAAY,QACZC,UAAW,CAAC,GAAI,KAGZC,EAAY,CAChBC,YAvEO,SAAUb,EAAMzB,GACrB,IAAMuC,EAAUvC,EAAMJ,OAGtB,GAFe2C,EAAQC,UAAUC,SAAS,0BAInC,CACL,IAAIC,EAAa,YAAO3B,GAExB2B,EAAgBA,EAAcC,QAAO,SAACC,GACpC,OAAOA,EAAK/D,OAAS4C,EAAK5C,QAE5BkC,EAAgB2B,OAPhB3B,EAAc8B,KAAK,CAAEhE,KAAM4C,EAAK5C,KAAMY,MAAOgC,EAAKhC,QAUpD8C,EAAQC,UAAUM,OAAO,4BA+D7B,OACE,sBAAKpE,UAAU,SAAf,UACE,oBAAIA,UAAU,mBAAd,SAAkCiC,IACjCE,EACC,gCACE,cAAC,IAAD,CACEnC,UAAU,gBACViD,QAASA,EACTpB,MAAOA,EACP8B,UAbgB,CACxBU,aAAc,SAACtB,GAAD,OAAUA,EAAKhC,MAAQ,EAAI,UAAYgC,EAAKhC,MAAQ,EAAI,UAAY,WAa5E,cAAC,EAAD,CACEZ,KAAK,cACLD,QAvCQ,WAChBH,EAAMY,cAAc,CAClBgB,OAAQA,EACRf,KAAM,gBAuCJ,gCACE,cAAC,IAAD,CACEZ,UAAU,gBACViD,QAASA,EACTpB,MAAOA,EACP8B,UAAWA,IACb,cAAC,EAAD,CACExD,KAAK,gBACLD,QAlFW,WACnB,IAGEoE,EAHIC,EAAiBxC,EAAUY,OAC7B6B,EAAgB,GAClBC,EAAgB,GAGlBpC,EAAcqC,SAAQ,SAAA3B,GACpBhB,EAAU4C,SAAS5B,EAAK5C,MAAQqE,EAAcL,KAAKpB,GAAQ0B,EAAcN,KAAKpB,MAEhFuB,EAAkBC,EAAiBC,EAAc7B,OAEjD,IAAIiC,EAAe/C,EAAMiB,KAAI,SAAAC,GAC3B,OAAiB,OAAbyB,QAAa,IAAbA,OAAA,EAAAA,EAAe7B,SAAU6B,EAAcK,MAAK,SAAAC,GAAC,OAAIA,EAAE3E,OAAS4C,EAAK5C,QAC5D,CAAEA,KAAM4C,EAAK5C,KAAMY,MAAO,IACX,OAAb0D,QAAa,IAAbA,OAAA,EAAAA,EAAe9B,SAAU8B,EAAcI,MAAK,SAAAC,GAAC,OAAIA,EAAE3E,OAAS4C,EAAK5C,QACnE,CAAEA,KAAM4C,EAAK5C,KAAMY,MAAO,GAE1BgC,KAIIgC,SAASC,iBAAiB,2BAChCN,SAAQ,SAAAb,GACfA,EAAQC,UAAUmB,OAAO,6BAG3B5C,EAAgB,GAChBP,EAAS8C,GACThD,EAAkC,EAAvB4C,EAAc7B,QAAe8B,EAAc9B,OAAS2B,IAC/DlC,GAAkB,aC7DP8C,G,MAZD,SAACnF,GACb,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAIA,UAAU,iBAAd,8BAAiDD,EAAMO,SAAvD,OACA,qBAAIN,UAAU,kBAAd,wBAEE,uBAAMA,UAAU,kBAAhB,UAAmCD,EAAM4B,OAAzC,qBCuBOwD,EAzBH,WAAO,IAAD,EACQ9E,mBAAS,IADjB,mBACTO,EADS,KACHwE,EADG,OAEY/E,mBAAS,IAFrB,mBAEbC,EAFa,KAEHC,EAFG,OAGQF,mBAAS,GAHjB,mBAGbsB,EAHa,KAGLC,EAHK,KAKVyD,EAAmB,SAAC5D,GACxB2D,EAAQ3D,EAAKb,KAAOa,EAAKb,KAAOA,GAChCL,EAAYkB,EAAKnB,SAAWmB,EAAKnB,SAAWA,GAC5CsB,EAAUH,EAAKE,OAASF,EAAKE,OAASA,IAGxC,OACE,qBAAK3B,UAAU,MAAf,SACGY,EAAK+B,OACK,SAAT/B,EACE,cAAC,EAAD,CAAMD,cAAe,SAACc,GAAW4D,EAAiB5D,MAElD,cAAC,EAAD,CAAOnB,SAAUA,EAAUqB,OAAQA,IAErC,cAAC,EAAD,CAAShB,cAAe,SAACc,GAAW4D,EAAiB5D,SCb9C6D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BZ,M","file":"static/js/main.6684d2af.chunk.js","sourcesContent":["import './Button.scss'\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      className=\"c-button\"\r\n      type=\"submit\"\r\n      onClick={props.onClick}>\r\n      {props.text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import './Welcome.scss'\r\nimport Button from '../Button/Button'\r\nimport { useState } from 'react'\r\n\r\nconst Welcome = (props) => {\r\n  const [nickname, setNickname] = useState(\"\")\r\n  const [isValid, setIsValid] = useState(true)\r\n\r\n  const validateNickname = (event) => {\r\n    let pattern = /^[a-zA-Z0-9]{1,20}$/\r\n\r\n    event.preventDefault()\r\n\r\n    if (nickname?.match(pattern)) {\r\n      setIsValid(true)\r\n      showGame()\r\n    } else {\r\n      setIsValid(false)\r\n    }\r\n  }\r\n\r\n  const showGame = () => {\r\n    props.onButtonClick({\r\n      nickname: nickname,\r\n      step: \"game\"\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"c-welcome\">\r\n      <h1>Wordcloud game</h1>\r\n      <form className=\"c-welcome__form\">\r\n        {!isValid ?\r\n          <span \r\n            id=\"error\" \r\n            className=\"c-welcome__error\">\r\n            Nickname is required, it can contain letters and numbers only. Minimum length is 1 and maximum length is 20 characters.\r\n          </span>\r\n        :\r\n          ''\r\n        }\r\n        <input\r\n          className=\"c-welcome__input\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your nickname here...\"\r\n          value={nickname}\r\n          onChange={(e) => setNickname(e.target.value)}\r\n          {...(!isValid ? { \"aria-describedby\": \"error\" } : {})}\r\n          aria-label=\"nickname\"\r\n          aria-required=\"true\"\r\n          required />\r\n        <Button\r\n          text=\"play\"\r\n          onClick={validateNickname} />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Welcome","const data = [\r\n  {\r\n    \"question\": \"select animals\",\r\n    \"all_words\": [\r\n      \"hole\",\r\n      \"sofa\",\r\n      \"pear\",\r\n      \"tiger\",\r\n      \"oatmeal\",\r\n      \"square\",\r\n      \"nut\",\r\n      \"cub\",\r\n      \"shirt\",\r\n      \"tub\",\r\n      \"passenger\",\r\n      \"cow\"\r\n    ],\r\n    \"good_words\": [\r\n      \"tiger\",\r\n      \"cow\"\r\n    ]\r\n  },\r\n  {\r\n    \"question\": \"select colors\",\r\n    \"all_words\": [\r\n      \"jeans\",\r\n      \"existence\",\r\n      \"ink\",\r\n      \"red\",\r\n      \"blue\",\r\n      \"yellow\",\r\n      \"laugh\",\r\n      \"behavior\",\r\n      \"expansion\",\r\n      \"white\",\r\n      \"black\",\r\n      \"cakes\"\r\n    ],\r\n    \"good_words\": [\r\n      \"red\",\r\n      \"blue\",\r\n      \"yellow\",\r\n      \"white\",\r\n      \"black\"\r\n    ]\r\n  },\r\n  {\r\n    \"question\": \"select vehicles\",\r\n    \"all_words\": [\r\n      \"belief\",\r\n      \"wire\",\r\n      \"car\",\r\n      \"bus\",\r\n      \"star\",\r\n      \"river\",\r\n      \"hat\",\r\n      \"skirt\",\r\n      \"train\"\r\n    ],\r\n    \"good_words\": [\r\n      \"car\",\r\n      \"bus\",\r\n      \"train\"\r\n    ]\r\n  }\r\n]\r\n\r\nexport default data","import data from '../../data'\r\nimport './Game.scss'\r\nimport Button from '../Button/Button'\r\nimport { useState, useEffect } from 'react'\r\nimport ReactWordcloud from \"react-wordcloud\"\r\n\r\nconst Game = (props) => {\r\n  const [points, setPoints] = useState(0),\r\n    [words, setWords] = useState([]),\r\n    [goodWords, setGoodWords] = useState([]),\r\n    [question, setQuestion] = useState(\"\"),\r\n    [isGameFinished, setIsGameFinished] = useState(false)\r\n\r\n  let selectedWords = []\r\n\r\n  useEffect(() => {\r\n    let index = Math.floor(Math.random() * data.length),\r\n      words = data[index].all_words\r\n\r\n    let preparedWords = words.map(word => { return { text: word, value: 1 } })\r\n\r\n    setWords(preparedWords)\r\n    setQuestion(data[index].question)\r\n    setGoodWords(data[index].good_words)\r\n  }, [])\r\n\r\n  const getCallback = () => {\r\n    return function (word, event) {\r\n      const element = event.target,\r\n        isSelected = element.classList.contains('c-game__word--selected')\r\n\r\n      if (!isSelected) {\r\n        selectedWords.push({ text: word.text, value: word.value })\r\n      } else {\r\n        let filteredItems = [...selectedWords]\r\n\r\n        filteredItems = filteredItems.filter((item) => {\r\n          return item.text !== word.text\r\n        })\r\n        selectedWords = filteredItems\r\n      }\r\n\r\n      element.classList.toggle('c-game__word--selected')\r\n    }\r\n  }\r\n\r\n  const checkAnswers = () => {\r\n    const correctAnswers = goodWords.length\r\n    let rightSelected = [],\r\n      wrongSelected = [],\r\n      rightUnselected = 0\r\n\r\n    selectedWords.forEach(word => {\r\n      goodWords.includes(word.text) ? rightSelected.push(word) : wrongSelected.push(word)\r\n    })\r\n    rightUnselected = correctAnswers - rightSelected.length\r\n\r\n    let updatedWords = words.map(word => {\r\n      if (rightSelected?.length && rightSelected.some(w => w.text === word.text)) {\r\n        return { text: word.text, value: 2 }\r\n      } else if (wrongSelected?.length && wrongSelected.some(w => w.text === word.text)) {\r\n        return { text: word.text, value: 0 }\r\n      } else {\r\n        return word\r\n      }\r\n    })\r\n\r\n    let selected = document.querySelectorAll('.c-game__word--selected')\r\n    selected.forEach(element => {\r\n      element.classList.remove('c-game__word--selected')\r\n    })\r\n\r\n    selectedWords = []\r\n    setWords(updatedWords)\r\n    setPoints((rightSelected.length * 2) - (wrongSelected.length + rightUnselected))\r\n    setIsGameFinished(true)\r\n  }\r\n\r\n  const showScore = () => {\r\n    props.onButtonClick({\r\n      points: points,\r\n      step: \"score\"\r\n    })\r\n  }\r\n\r\n  const options = {\r\n    rotations: 1,\r\n    rotationAngles: [0],\r\n    colors: [\"#000\"],\r\n    deterministic: true,\r\n    enableTooltip: false,\r\n    padding: 15,\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Heebo\",\r\n    fontSizes: [18, 18]\r\n  }\r\n\r\n  const callbacks = {\r\n    onWordClick: getCallback()\r\n  }\r\n\r\n  const callbacksFinished = {\r\n    getWordColor: (word) => word.value > 1 ? '#8CC14C' : word.value < 1 ? '#F34237' : \"#000\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"c-game\">\r\n      <h1 className=\"c-game__question\">{question}</h1>\r\n      {isGameFinished ?\r\n        <div>\r\n          <ReactWordcloud\r\n            className=\"c-game__cloud\"\r\n            options={options}\r\n            words={words}\r\n            callbacks={callbacksFinished} />\r\n          <Button\r\n            text=\"finish game\"\r\n            onClick={showScore} />\r\n        </div>\r\n        :\r\n        <div>\r\n          <ReactWordcloud\r\n            className=\"c-game__cloud\"\r\n            options={options}\r\n            words={words}\r\n            callbacks={callbacks} />\r\n          <Button\r\n            text=\"check answers\"\r\n            onClick={checkAnswers} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","import './Score.scss'\r\n\r\nconst Score = (props) => {\r\n  return (\r\n    <div className=\"c-score\">\r\n      <h1 className=\"c-score__title\">Congratulations, {props.nickname}!</h1>\r\n      <h2 className=\"c-score__result\">\r\n        Your score: \r\n        <span className=\"c-score__points\">{props.points} points</span>\r\n      </h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Score\r\n","import './App.scss'\nimport { useState } from 'react'\nimport Welcome from './components/Welcome/Welcome'\nimport Game from './components/Game/Game'\nimport Score from './components/Score/Score'\n\nconst App = () => {\n  const [step, setStep] = useState(\"\"),\n    [nickname, setNickname] = useState(\"\"),\n    [points, setPoints] = useState(0)\n\n  const getDataFromChild = (data) => {\n    setStep(data.step ? data.step : step)\n    setNickname(data.nickname ? data.nickname : nickname)\n    setPoints(data.points ? data.points : points)\n  }\n\n  return (\n    <div className=\"app\">\n      {step.length ?\n        step === 'game' ?\n          <Game onButtonClick={(data) => { getDataFromChild(data) }}/>\n          :\n          <Score nickname={nickname} points={points}/>\n      :\n        <Welcome onButtonClick={(data) => { getDataFromChild(data) }}/>\n      }\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}